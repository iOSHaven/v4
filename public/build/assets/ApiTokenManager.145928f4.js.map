{"version":3,"file":"ApiTokenManager.145928f4.js","sources":["../../../resources/js/Pages/API/Partials/ApiTokenManager.vue"],"sourcesContent":["<script setup>\nimport { ref } from 'vue';\nimport { useForm } from '@inertiajs/inertia-vue3';\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue';\nimport JetActionSection from '@/Jetstream/ActionSection.vue';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetConfirmationModal from '@/Jetstream/ConfirmationModal.vue';\nimport JetDangerButton from '@/Jetstream/DangerButton.vue';\nimport JetDialogModal from '@/Jetstream/DialogModal.vue';\nimport JetFormSection from '@/Jetstream/FormSection.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetCheckbox from '@/Jetstream/Checkbox.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetLabel from '@/Jetstream/Label.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\nimport JetSectionBorder from '@/Jetstream/SectionBorder.vue';\n\nconst props = defineProps({\n    tokens: Array,\n    availablePermissions: Array,\n    defaultPermissions: Array,\n});\n\nconst createApiTokenForm = useForm({\n    name: '',\n    permissions: props.defaultPermissions,\n});\n\nconst updateApiTokenForm = useForm({\n    permissions: [],\n});\n\nconst deleteApiTokenForm = useForm();\n\nconst displayingToken = ref(false);\nconst managingPermissionsFor = ref(null);\nconst apiTokenBeingDeleted = ref(null);\n\nconst createApiToken = () => {\n    createApiTokenForm.post(route('api-tokens.store'), {\n        preserveScroll: true,\n        onSuccess: () => {\n            displayingToken.value = true;\n            createApiTokenForm.reset();\n        },\n    });\n};\n\nconst manageApiTokenPermissions = (token) => {\n    updateApiTokenForm.permissions = token.abilities;\n    managingPermissionsFor.value = token;\n};\n\nconst updateApiToken = () => {\n    updateApiTokenForm.put(route('api-tokens.update', managingPermissionsFor.value), {\n        preserveScroll: true,\n        preserveState: true,\n        onSuccess: () => (managingPermissionsFor.value = null),\n    });\n};\n\nconst confirmApiTokenDeletion = (token) => {\n    apiTokenBeingDeleted.value = token;\n};\n\nconst deleteApiToken = () => {\n    deleteApiTokenForm.delete(route('api-tokens.destroy', apiTokenBeingDeleted.value), {\n        preserveScroll: true,\n        preserveState: true,\n        onSuccess: () => (apiTokenBeingDeleted.value = null),\n    });\n};\n</script>\n\n<template>\n    <div>\n        <!-- Generate API Token -->\n        <JetFormSection @submitted=\"createApiToken\">\n            <template #title>\n                Create API Token\n            </template>\n\n            <template #description>\n                API tokens allow third-party services to authenticate with our application on your behalf.\n            </template>\n\n            <template #form>\n                <!-- Token Name -->\n                <div class=\"col-span-6 sm:col-span-4\">\n                    <JetLabel for=\"name\" value=\"Name\" />\n                    <JetInput\n                        id=\"name\"\n                        v-model=\"createApiTokenForm.name\"\n                        type=\"text\"\n                        class=\"mt-1 block w-full\"\n                        autofocus\n                    />\n                    <JetInputError :message=\"createApiTokenForm.errors.name\" class=\"mt-2\" />\n                </div>\n\n                <!-- Token Permissions -->\n                <div v-if=\"availablePermissions.length > 0\" class=\"col-span-6\">\n                    <JetLabel for=\"permissions\" value=\"Permissions\" />\n\n                    <div class=\"mt-2 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div v-for=\"permission in availablePermissions\" :key=\"permission\">\n                            <label class=\"flex items-center\">\n                                <JetCheckbox v-model:checked=\"createApiTokenForm.permissions\" :value=\"permission\" />\n                                <span class=\"ml-2 text-sm text-gray-600\">{{ permission }}</span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </template>\n\n            <template #actions>\n                <JetActionMessage :on=\"createApiTokenForm.recentlySuccessful\" class=\"mr-3\">\n                    Created.\n                </JetActionMessage>\n\n                <JetButton :class=\"{ 'opacity-25': createApiTokenForm.processing }\" :disabled=\"createApiTokenForm.processing\">\n                    Create\n                </JetButton>\n            </template>\n        </JetFormSection>\n\n        <div v-if=\"tokens.length > 0\">\n            <JetSectionBorder />\n\n            <!-- Manage API Tokens -->\n            <div class=\"mt-10 sm:mt-0\">\n                <JetActionSection>\n                    <template #title>\n                        Manage API Tokens\n                    </template>\n\n                    <template #description>\n                        You may delete any of your existing tokens if they are no longer needed.\n                    </template>\n\n                    <!-- API Token List -->\n                    <template #content>\n                        <div class=\"space-y-6\">\n                            <div v-for=\"token in tokens\" :key=\"token.id\" class=\"flex items-center justify-between\">\n                                <div>\n                                    {{ token.name }}\n                                </div>\n\n                                <div class=\"flex items-center\">\n                                    <div v-if=\"token.last_used_ago\" class=\"text-sm text-gray-400\">\n                                        Last used {{ token.last_used_ago }}\n                                    </div>\n\n                                    <button\n                                        v-if=\"availablePermissions.length > 0\"\n                                        class=\"cursor-pointer ml-6 text-sm text-gray-400 underline\"\n                                        @click=\"manageApiTokenPermissions(token)\"\n                                    >\n                                        Permissions\n                                    </button>\n\n                                    <button class=\"cursor-pointer ml-6 text-sm text-red-500\" @click=\"confirmApiTokenDeletion(token)\">\n                                        Delete\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </template>\n                </JetActionSection>\n            </div>\n        </div>\n\n        <!-- Token Value Modal -->\n        <JetDialogModal :show=\"displayingToken\" @close=\"displayingToken = false\">\n            <template #title>\n                API Token\n            </template>\n\n            <template #content>\n                <div>\n                    Please copy your new API token. For your security, it won't be shown again.\n                </div>\n\n                <div v-if=\"$page.props.jetstream.flash.token\" class=\"mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500\">\n                    {{ $page.props.jetstream.flash.token }}\n                </div>\n            </template>\n\n            <template #footer>\n                <JetSecondaryButton @click=\"displayingToken = false\">\n                    Close\n                </JetSecondaryButton>\n            </template>\n        </JetDialogModal>\n\n        <!-- API Token Permissions Modal -->\n        <JetDialogModal :show=\"managingPermissionsFor != null\" @close=\"managingPermissionsFor = null\">\n            <template #title>\n                API Token Permissions\n            </template>\n\n            <template #content>\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div v-for=\"permission in availablePermissions\" :key=\"permission\">\n                        <label class=\"flex items-center\">\n                            <JetCheckbox v-model:checked=\"updateApiTokenForm.permissions\" :value=\"permission\" />\n                            <span class=\"ml-2 text-sm text-gray-600\">{{ permission }}</span>\n                        </label>\n                    </div>\n                </div>\n            </template>\n\n            <template #footer>\n                <JetSecondaryButton @click=\"managingPermissionsFor = null\">\n                    Cancel\n                </JetSecondaryButton>\n\n                <JetButton\n                    class=\"ml-3\"\n                    :class=\"{ 'opacity-25': updateApiTokenForm.processing }\"\n                    :disabled=\"updateApiTokenForm.processing\"\n                    @click=\"updateApiToken\"\n                >\n                    Save\n                </JetButton>\n            </template>\n        </JetDialogModal>\n\n        <!-- Delete Token Confirmation Modal -->\n        <JetConfirmationModal :show=\"apiTokenBeingDeleted != null\" @close=\"apiTokenBeingDeleted = null\">\n            <template #title>\n                Delete API Token\n            </template>\n\n            <template #content>\n                Are you sure you would like to delete this API token?\n            </template>\n\n            <template #footer>\n                <JetSecondaryButton @click=\"apiTokenBeingDeleted = null\">\n                    Cancel\n                </JetSecondaryButton>\n\n                <JetDangerButton\n                    class=\"ml-3\"\n                    :class=\"{ 'opacity-25': deleteApiTokenForm.processing }\"\n                    :disabled=\"deleteApiTokenForm.processing\"\n                    @click=\"deleteApiToken\"\n                >\n                    Delete\n                </JetDangerButton>\n            </template>\n        </JetConfirmationModal>\n    </div>\n</template>\n"],"names":["createApiTokenForm","useForm","updateApiTokenForm","deleteApiTokenForm","displayingToken","ref","managingPermissionsFor","apiTokenBeingDeleted","createApiToken","manageApiTokenPermissions","token","updateApiToken","confirmApiTokenDeletion","deleteApiToken"],"mappings":"+oEAuBA,MAAMA,EAAqBC,EAAQ,CAC/B,KAAM,GACN,cAAmB,kBACvB,CAAC,EAEKC,EAAqBD,EAAQ,CAC/B,YAAa,CAAE,CACnB,CAAC,EAEKE,EAAqBF,EAAO,EAE5BG,EAAkBC,EAAI,EAAK,EAC3BC,EAAyBD,EAAI,IAAI,EACjCE,EAAuBF,EAAI,IAAI,EAE/BG,EAAiB,IAAM,CACzBR,EAAmB,KAAK,MAAM,kBAAkB,EAAG,CAC/C,eAAgB,GAChB,UAAW,IAAM,CACbI,EAAgB,MAAQ,GACxBJ,EAAmB,MAAK,CAC3B,CACT,CAAK,CACL,EAEMS,EAA6BC,GAAU,CACzCR,EAAmB,YAAcQ,EAAM,UACvCJ,EAAuB,MAAQI,CACnC,EAEMC,EAAiB,IAAM,CACzBT,EAAmB,IAAI,MAAM,oBAAqBI,EAAuB,KAAK,EAAG,CAC7E,eAAgB,GAChB,cAAe,GACf,UAAW,IAAOA,EAAuB,MAAQ,IACzD,CAAK,CACL,EAEMM,EAA2BF,GAAU,CACvCH,EAAqB,MAAQG,CACjC,EAEMG,EAAiB,IAAM,CACzBV,EAAmB,OAAO,MAAM,qBAAsBI,EAAqB,KAAK,EAAG,CAC/E,eAAgB,GAChB,cAAe,GACf,UAAW,IAAOA,EAAqB,MAAQ,IACvD,CAAK,CACL"}