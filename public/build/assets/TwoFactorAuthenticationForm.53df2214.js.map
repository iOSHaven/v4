{"version":3,"file":"TwoFactorAuthenticationForm.53df2214.js","sources":["../../../resources/js/Jetstream/ConfirmsPassword.vue","../../../resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue"],"sourcesContent":["<script setup>\nimport { ref, reactive, nextTick } from 'vue';\nimport JetButton from './Button.vue';\nimport JetDialogModal from './DialogModal.vue';\nimport JetInput from './Input.vue';\nimport JetInputError from './InputError.vue';\nimport JetSecondaryButton from './SecondaryButton.vue';\n\nconst emit = defineEmits(['confirmed']);\n\ndefineProps({\n    title: {\n        type: String,\n        default: 'Confirm Password',\n    },\n    content: {\n        type: String,\n        default: 'For your security, please confirm your password to continue.',\n    },\n    button: {\n        type: String,\n        default: 'Confirm',\n    },\n});\n\nconst confirmingPassword = ref(false);\n\nconst form = reactive({\n    password: '',\n    error: '',\n    processing: false,\n});\n\nconst passwordInput = ref(null);\n\nconst startConfirmingPassword = () => {\n    axios.get(route('password.confirmation')).then(response => {\n        if (response.data.confirmed) {\n            emit('confirmed');\n        } else {\n            confirmingPassword.value = true;\n\n            setTimeout(() => passwordInput.value.focus(), 250);\n        }\n    });\n};\n\nconst confirmPassword = () => {\n    form.processing = true;\n\n    axios.post(route('password.confirm'), {\n        password: form.password,\n    }).then(() => {\n        form.processing = false;\n\n        closeModal();\n        nextTick().then(() => emit('confirmed'));\n\n    }).catch(error => {\n        form.processing = false;\n        form.error = error.response.data.errors.password[0];\n        passwordInput.value.focus();\n    });\n};\n\nconst closeModal = () => {\n    confirmingPassword.value = false;\n    form.password = '';\n    form.error = '';\n};\n</script>\n\n<template>\n    <span>\n        <span @click=\"startConfirmingPassword\">\n            <slot />\n        </span>\n\n        <JetDialogModal :show=\"confirmingPassword\" @close=\"closeModal\">\n            <template #title>\n                {{ title }}\n            </template>\n\n            <template #content>\n                {{ content }}\n\n                <div class=\"mt-4\">\n                    <JetInput\n                        ref=\"passwordInput\"\n                        v-model=\"form.password\"\n                        type=\"password\"\n                        class=\"mt-1 block w-3/4\"\n                        placeholder=\"Password\"\n                        @keyup.enter=\"confirmPassword\"\n                    />\n\n                    <JetInputError :message=\"form.error\" class=\"mt-2\" />\n                </div>\n            </template>\n\n            <template #footer>\n                <JetSecondaryButton @click=\"closeModal\">\n                    Cancel\n                </JetSecondaryButton>\n\n                <JetButton\n                    class=\"ml-3\"\n                    :class=\"{ 'opacity-25': form.processing }\"\n                    :disabled=\"form.processing\"\n                    @click=\"confirmPassword\"\n                >\n                    {{ button }}\n                </JetButton>\n            </template>\n        </JetDialogModal>\n    </span>\n</template>\n","<script setup>\nimport { ref, computed, watch } from 'vue';\nimport { Inertia } from '@inertiajs/inertia';\nimport { useForm, usePage } from '@inertiajs/inertia-vue3';\nimport JetActionSection from '@/Jetstream/ActionSection.vue';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetConfirmsPassword from '@/Jetstream/ConfirmsPassword.vue';\nimport JetDangerButton from '@/Jetstream/DangerButton.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetLabel from '@/Jetstream/Label.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\n\nconst props = defineProps({\n    requiresConfirmation: Boolean,\n});\n\nconst enabling = ref(false);\nconst confirming = ref(false);\nconst disabling = ref(false);\nconst qrCode = ref(null);\nconst setupKey = ref(null);\nconst recoveryCodes = ref([]);\n\nconst confirmationForm = useForm({\n    code: '',\n});\n\nconst twoFactorEnabled = computed(\n    () => ! enabling.value && usePage().props.value.user?.two_factor_enabled,\n);\n\nwatch(twoFactorEnabled, () => {\n    if (! twoFactorEnabled.value) {\n        confirmationForm.reset();\n        confirmationForm.clearErrors();\n    }\n});\n\nconst enableTwoFactorAuthentication = () => {\n    enabling.value = true;\n\n    Inertia.post('/user/two-factor-authentication', {}, {\n        preserveScroll: true,\n        onSuccess: () => Promise.all([\n            showQrCode(),\n            showSetupKey(),\n            showRecoveryCodes(),\n        ]),\n        onFinish: () => {\n            enabling.value = false;\n            confirming.value = props.requiresConfirmation;\n        },\n    });\n};\n\nconst showQrCode = () => {\n    return axios.get('/user/two-factor-qr-code').then(response => {\n        qrCode.value = response.data.svg;\n    });\n};\n\nconst showSetupKey = () => {\n    return axios.get('/user/two-factor-secret-key').then(response => {\n        setupKey.value = response.data.secretKey;\n    });\n}\n\nconst showRecoveryCodes = () => {\n    return axios.get('/user/two-factor-recovery-codes').then(response => {\n        recoveryCodes.value = response.data;\n    });\n};\n\nconst confirmTwoFactorAuthentication = () => {\n    confirmationForm.post('/user/confirmed-two-factor-authentication', {\n        errorBag: \"confirmTwoFactorAuthentication\",\n        preserveScroll: true,\n        preserveState: true,\n        onSuccess: () => {\n            confirming.value = false;\n            qrCode.value = null;\n            setupKey.value = null;\n        },\n    });\n};\n\nconst regenerateRecoveryCodes = () => {\n    axios\n        .post('/user/two-factor-recovery-codes')\n        .then(() => showRecoveryCodes());\n};\n\nconst disableTwoFactorAuthentication = () => {\n    disabling.value = true;\n\n    Inertia.delete('/user/two-factor-authentication', {\n        preserveScroll: true,\n        onSuccess: () => {\n            disabling.value = false;\n            confirming.value = false;\n        },\n    });\n};\n</script>\n\n<template>\n    <JetActionSection>\n        <template #title>\n            Two Factor Authentication\n        </template>\n\n        <template #description>\n            Add additional security to your account using two factor authentication.\n        </template>\n\n        <template #content>\n            <h3 v-if=\"twoFactorEnabled && ! confirming\" class=\"text-lg font-medium text-gray-900\">\n                You have enabled two factor authentication.\n            </h3>\n\n            <h3 v-else-if=\"twoFactorEnabled && confirming\" class=\"text-lg font-medium text-gray-900\">\n                Finish enabling two factor authentication.\n            </h3>\n\n            <h3 v-else class=\"text-lg font-medium text-gray-900\">\n                You have not enabled two factor authentication.\n            </h3>\n\n            <div class=\"mt-3 max-w-xl text-sm text-gray-600\">\n                <p>\n                    When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application.\n                </p>\n            </div>\n\n            <div v-if=\"twoFactorEnabled\">\n                <div v-if=\"qrCode\">\n                    <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n                        <p v-if=\"confirming\" class=\"font-semibold\">\n                            To finish enabling two factor authentication, scan the following QR code using your phone's authenticator application or enter the setup key and provide the generated OTP code.\n                        </p>\n\n                        <p v-else>\n                            Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator application or enter the setup key.\n                        </p>\n                    </div>\n\n                    <div class=\"mt-4\" v-html=\"qrCode\" />\n\n                    <div class=\"mt-4 max-w-xl text-sm text-gray-600\" v-if=\"setupKey\">\n                        <p class=\"font-semibold\">\n                            Setup Key: <span v-html=\"setupKey\"></span>\n                        </p>\n                    </div>\n\n                    <div v-if=\"confirming\" class=\"mt-4\">\n                        <JetLabel for=\"code\" value=\"Code\" />\n\n                        <JetInput\n                            id=\"code\"\n                            v-model=\"confirmationForm.code\"\n                            type=\"text\"\n                            name=\"code\"\n                            class=\"block mt-1 w-1/2\"\n                            inputmode=\"numeric\"\n                            autofocus\n                            autocomplete=\"one-time-code\"\n                            @keyup.enter=\"confirmTwoFactorAuthentication\"\n                        />\n\n                        <JetInputError :message=\"confirmationForm.errors.code\" class=\"mt-2\" />\n                    </div>\n                </div>\n\n                <div v-if=\"recoveryCodes.length > 0 && ! confirming\">\n                    <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n                        <p class=\"font-semibold\">\n                            Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost.\n                        </p>\n                    </div>\n\n                    <div class=\"grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg\">\n                        <div v-for=\"code in recoveryCodes\" :key=\"code\">\n                            {{ code }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mt-5\">\n                <div v-if=\"! twoFactorEnabled\">\n                    <JetConfirmsPassword @confirmed=\"enableTwoFactorAuthentication\">\n                        <JetButton type=\"button\" :class=\"{ 'opacity-25': enabling }\" :disabled=\"enabling\">\n                            Enable\n                        </JetButton>\n                    </JetConfirmsPassword>\n                </div>\n\n                <div v-else>\n                    <JetConfirmsPassword @confirmed=\"confirmTwoFactorAuthentication\">\n                        <JetButton\n                            v-if=\"confirming\"\n                            type=\"button\"\n                            class=\"mr-3\"\n                            :class=\"{ 'opacity-25': enabling }\"\n                            :disabled=\"enabling\"\n                        >\n                            Confirm\n                        </JetButton>\n                    </JetConfirmsPassword>\n\n                    <JetConfirmsPassword @confirmed=\"regenerateRecoveryCodes\">\n                        <JetSecondaryButton\n                            v-if=\"recoveryCodes.length > 0 && ! confirming\"\n                            class=\"mr-3\"\n                        >\n                            Regenerate Recovery Codes\n                        </JetSecondaryButton>\n                    </JetConfirmsPassword>\n\n                    <JetConfirmsPassword @confirmed=\"showRecoveryCodes\">\n                        <JetSecondaryButton\n                            v-if=\"recoveryCodes.length === 0 && ! confirming\"\n                            class=\"mr-3\"\n                        >\n                            Show Recovery Codes\n                        </JetSecondaryButton>\n                    </JetConfirmsPassword>\n\n                    <JetConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n                        <JetSecondaryButton\n                            v-if=\"confirming\"\n                            :class=\"{ 'opacity-25': disabling }\"\n                            :disabled=\"disabling\"\n                        >\n                            Cancel\n                        </JetSecondaryButton>\n                    </JetConfirmsPassword>\n\n                    <JetConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n                        <JetDangerButton\n                            v-if=\"! confirming\"\n                            :class=\"{ 'opacity-25': disabling }\"\n                            :disabled=\"disabling\"\n                        >\n                            Disable\n                        </JetDangerButton>\n                    </JetConfirmsPassword>\n                </div>\n            </div>\n        </template>\n    </JetActionSection>\n</template>\n"],"names":["Inertia"],"mappings":"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"}